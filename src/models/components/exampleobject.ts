/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ExampleObject = {
    otherField?: string | undefined;
};

/** @internal */
export namespace ExampleObject$ {
    export const inboundSchema: z.ZodType<ExampleObject, z.ZodTypeDef, unknown> = z
        .object({
            other_field: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.other_field === undefined ? null : { otherField: v.other_field }),
            };
        });

    export type Outbound = {
        other_field?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExampleObject> = z
        .object({
            otherField: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.otherField === undefined ? null : { other_field: v.otherField }),
            };
        });
}
