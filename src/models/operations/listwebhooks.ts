/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ListWebhooksResponse = {
    httpMeta: components.HTTPMetadata;
    exampleBody?: components.ExampleBody | undefined;
};

/** @internal */
export namespace ListWebhooksResponse$ {
    export const inboundSchema: z.ZodType<ListWebhooksResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ExampleBody: components.ExampleBody$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                ExampleBody: "exampleBody",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ExampleBody?: components.ExampleBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ListWebhooksResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            exampleBody: components.ExampleBody$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                exampleBody: "ExampleBody",
            });
        });
}
