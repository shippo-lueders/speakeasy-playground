
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Requests
{
    using Newtonsoft.Json.Linq;
    using Newtonsoft.Json;
    using Shippo.Models.Components;
    using Shippo.Utils;
    using System.Numerics;
    using System;
    

    public class CreateExampleRequestBodyType
    {
        private CreateExampleRequestBodyType(string value) { Value = value; }

        public string Value { get; private set; }
        public static CreateExampleRequestBodyType ExampleSimple { get { return new CreateExampleRequestBodyType("ExampleSimple"); } }
        
        public static CreateExampleRequestBodyType ExampleComplex { get { return new CreateExampleRequestBodyType("ExampleComplex"); } }
        
        public static CreateExampleRequestBodyType Null { get { return new CreateExampleRequestBodyType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(CreateExampleRequestBodyType v) { return v.Value; }
        public static CreateExampleRequestBodyType FromString(string v) {
            switch(v) {
                case "ExampleSimple": return ExampleSimple;
                case "ExampleComplex": return ExampleComplex;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for CreateExampleRequestBodyType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((CreateExampleRequestBodyType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }
    

    [JsonConverter(typeof(CreateExampleRequestBody.CreateExampleRequestBodyConverter))]
    public class CreateExampleRequestBody {
        public CreateExampleRequestBody(CreateExampleRequestBodyType type) {
            Type = type;
        }
        public ExampleSimple? ExampleSimple { get; set; } 
        public ExampleComplex? ExampleComplex { get; set; } 

        public CreateExampleRequestBodyType Type { get; set; }


        public static CreateExampleRequestBody CreateExampleSimple(ExampleSimple exampleSimple) {
            CreateExampleRequestBodyType typ = CreateExampleRequestBodyType.ExampleSimple;

            CreateExampleRequestBody res = new CreateExampleRequestBody(typ);
            res.ExampleSimple = exampleSimple;
            return res;
        }

        public static CreateExampleRequestBody CreateExampleComplex(ExampleComplex exampleComplex) {
            CreateExampleRequestBodyType typ = CreateExampleRequestBodyType.ExampleComplex;

            CreateExampleRequestBody res = new CreateExampleRequestBody(typ);
            res.ExampleComplex = exampleComplex;
            return res;
        }

        public static CreateExampleRequestBody CreateNull() {
            CreateExampleRequestBodyType typ = CreateExampleRequestBodyType.Null;
            return new CreateExampleRequestBody(typ);
        }

        public class CreateExampleRequestBodyConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(CreateExampleRequestBody);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            { 
                var json = JRaw.Create(reader).ToString();

                if (json == "null") {
                    return null;
                }
                try
                {
                    ExampleSimple? exampleSimple = ResponseBodyDeserializer.Deserialize<ExampleSimple>(json, missingMemberHandling: MissingMemberHandling.Error);
                    return new CreateExampleRequestBody(CreateExampleRequestBodyType.ExampleSimple) {
                        ExampleSimple = exampleSimple
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    ExampleComplex? exampleComplex = ResponseBodyDeserializer.Deserialize<ExampleComplex>(json, missingMemberHandling: MissingMemberHandling.Error);
                    return new CreateExampleRequestBody(CreateExampleRequestBodyType.ExampleComplex) {
                        ExampleComplex = exampleComplex
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                CreateExampleRequestBody res = (CreateExampleRequestBody)value;
                if (CreateExampleRequestBodyType.FromString(res.Type).Equals(CreateExampleRequestBodyType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.ExampleSimple != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ExampleSimple));
                    return;
                }
                if (res.ExampleComplex != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ExampleComplex));
                    return;
                }

            }
        }

    }

}